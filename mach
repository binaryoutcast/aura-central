#!/bin/sh

if GIT_PATH="$(which git 2>/dev/null)"; then
  _COMM_BRANCH=`"${GIT_PATH}" symbolic-ref --short HEAD | tr [:upper:] [:lower:]`
  _MOZILLA_BRANCH=`cd mozilla && "${GIT_PATH}" symbolic-ref --short HEAD | tr [:upper:] [:lower:]`
  
  if [ -n "$_MOZILLA_BRANCH" ]; then
    export BINOC_GIT_BRANCH=$_COMM_BRANCH@$_MOZILLA_BRANCH
  else
    export BINOC_GIT_BRANCH=$_COMM_BRANCH
  fi
fi

BINOC_TOOLCHAIN=`uname`
MACH_CMD=./mozilla/mach

if [ "$1" == "release" ]; then
  $MACH_CMD build
  $MACH_CMD package
  if [[ "$BINOC_TOOLCHAIN" == "MINGW32_NT-"* ]]; then
    $MACH_CMD installer
  fi
  $MACH_CMD mar
elif [ "$1" == "checkout" ]; then
  echo "binoc-central:"
  if [ "$2" == "absolute-trunk" ] && [ "$_COMM_BRANCH" != "trunk" ]; then
    "${GIT_PATH}" checkout TRUNK
  fi
  "${GIT_PATH}" pull
  if [ ! -d "mozilla" ]; then
    "${GIT_PATH}" submodule init
  fi
  if [ "$2" == "absolute-trunk" ]; then
    echo "uxp:"
    cd mozilla
    if [ "$_MOZILLA_BRANCH" != "master" ]; then
      "${GIT_PATH}" checkout master
    fi
    "${GIT_PATH}" pull
    cd ..
  else
    "${GIT_PATH}" submodule update
  fi
else 
  $MACH_CMD $@
fi